/* 
======================================

### Classification Library  ###
Origin Collection: 5

# Notes
- Remember to Change asset path in ExportImage function (assetID)

=======================================
*/


var hexagons = ee.FeatureCollection("users/dyedenm/mapbiomas/infraurbana_c4/examples/hexagon_urban_example"),
    cartas = ee.FeatureCollection("projects/mapbiomas-workspace/AUXILIAR/cartas");


var index_lib = require("users/breno_malheiros/terras:index_lib.js");


var getBlocksList = function(){
  return [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
  37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
  72, 73, 79, 80, 81, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109,
  111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139,
  140, 141, 142, 143, 144, 145, 147, 148, 149, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170,
  171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200,
  201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227,
  228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
  253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279,
  280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
  306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332,
  333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359,
  360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385,
  386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
  412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
  438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
  464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
  491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
  518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
  549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578,
  579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
  609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
  638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
  667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
  696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
  725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
  754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
  784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800]
};

var getBlocksListUrban2018 = function(){
  return [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
  37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
  72, 73, 79, 80, 81, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109,
  111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139,
  140, 141, 142, 143, 144, 145, 147, 148, 149, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170,
  171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200,
  201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227,
  228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
  253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279,
  280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
  306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332,
  333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359,
  360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385,
  386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
  412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
  438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
  464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
  491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
  518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
  549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578,
  579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
  609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
  638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
  667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
  696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
  725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
  754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
  784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800]
};

var getBlocksListUrban2010 = function(){
  return [2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 
  53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 79, 80, 81, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105,
  106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145,
  147, 148, 149, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 171, 172, 173, 175, 177, 178, 179, 180, 181, 184, 185, 187, 189, 190, 191, 192, 194,
  196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233,
  234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 268, 269, 270, 271,
  272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306,
  307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341,
  342, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378,
  379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
  413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
  448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
  482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
  515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
  551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585,
  587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
  621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
  654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 
  687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
  720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
  754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
  788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800]
};

var getBlocksListUrban2002 = function(){
  return [2, 3, 5, 7, 8, 9, 11, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 54, 55, 59, 60, 61,
  64, 65, 66, 67, 69, 70, 71, 72, 73, 79, 80, 81, 83, 86, 87, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 121,
  122, 123, 125, 127, 130, 131, 132, 133, 134, 138, 139, 140, 141, 144, 145, 147, 148, 149, 153, 154, 155, 157, 158, 159, 161, 162, 163, 165, 168, 169, 171, 172, 173,
  175, 177, 178, 179, 180, 181, 184, 185, 187, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 217, 218, 219, 220, 
  221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
  259, 260, 262, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299,
  300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 
  337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376,
  377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 
  411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
  446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479,
  480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
  513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
  549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 582, 583,
  584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
  619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
  652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
  685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
  718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751,
  752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 
  786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800];
};

var getBlocksListUrban1994 = function(){
  return [2, 3, 5, 7, 8, 9, 11, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 55, 59, 60, 61, 64,
  65, 66, 67, 69, 70, 71, 72, 73, 79, 80, 81, 83, 86, 87, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 121, 122, 
  123, 125, 127, 130, 131, 132, 133, 134, 138, 139, 140, 141, 144, 145, 148, 149, 153, 154, 155, 157, 158, 159, 161, 162, 163, 165, 168, 169, 171, 172, 173, 175, 177, 
  178, 179, 180, 181, 184, 185, 187, 189, 191, 192, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 217, 218, 219, 220, 221, 223, 225, 
  226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262,
  268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303,
  304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341,
  342, 347, 348, 349, 350, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385,
  386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419,
  420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
  454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
  488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
  521, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557,
  558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593,
  594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
  628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
  661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693,
  694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
  727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
  761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
  795, 796, 797, 798, 799, 800];
};

var getFeatureSpace = function(image, samples, bands){
  image = image.select(bands);
  
  samples = image.sampleRegions({
    collection:samples,
    scale:30,
    geometries:true
    
  }
  );

  return ee.FeatureCollection(samples);

};

var runRandomForest = function(ntree, image, samples, bands){

  var classifier = ee.Classifier.smileRandomForest({
                    numberOfTrees:ntree,
                    minLeafPopulation:20
                    })
                    .train({
                      'features':samples,
                      'classProperty':'value',
                      'inputProperties':bands
                    })
                    .setOutputMode('PROBABILITY');

  var classified = image.classify(classifier);
  
  return classified;
  
};

var getHexagonsFromGrid = function(grid_name){
  
  var grid = cartas.filterMetadata('grid_name', 'equals', grid_name);
  
  return hexagons.filterBounds(grid);
  
};

var getHexagonsBlock = function(block_id){
  
  return hexagons.filterMetadata('block_id', 'equals', block_id);
  
};

var getRandomPoints = function(region, number){
  var s = ee.FeatureCollection.randomPoints(region, number, 0);
  return s;

};

var getRandomPointsHexagon = function(hex_id, is_urban, year){
  var hex = ee.Feature(hexagons.filterMetadata('hex_id', 'equals', hex_id).first());
  
  var area_to_sample = null;
  var n_points = null;
  
  if (is_urban){
    n_points = ee.Number(hex.get('nsamples_u'));
    if (year === 2018){ 
      area_to_sample = ee.Feature(urban_hexs_2018.filterMetadata('hex_id', 'equals', hex_id).first());
    }
    
  } else {
    n_points = ee.Number(hex.get('nsamples_n'));
    if (year === 2018){ 
      area_to_sample = ee.Feature(noturban_hexs_2018.filterMetadata('hex_id', 'equals', hex_id).first());
    }
  }
  

  var points = getRandomPoints(area_to_sample.geometry(), n_points);
  
  if (is_urban){
    
    points = points.map(function(pt){return pt.set('value', 1).set('hex_id', hex_id).set('year', year)});
  } else {
    points = points.map(function(pt){return pt.set('value', 0).set('hex_id', hex_id).set('year', year)});
  }

  points = points.randomColumn('randomc', 0);
  
  return points;
  
};

var getSamplesUrbanBlock = function(block_id, year){
  var samples_urban = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_urban/samples_urban_' + year + '_blk_' + block_id);
  
  samples_urban = samples_urban.map(function(ft){return ft.set("value", 1);});
  
  return samples_urban;
};


var getSamplesNotUrban = function(year){
  var part0 = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_notuv2/samples_noturban_' + year + '_part0');
  var part1 = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_notuv2/samples_noturban_' + year + '_part1');
  var part2 = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_notuv2/samples_noturban_' + year + '_part2');
  var part3 = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_notuv2/samples_noturban_' + year + '_part3');
  var part4 = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_notuv2/samples_noturban_' + year + '_part4');
  var part5 = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_notuv2/samples_noturban_' + year + '_part5');
  var part6 = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_notuv2/samples_noturban_' + year + '_part6');
  var part7 = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_notuv2/samples_noturban_' + year + '_part7');
  var part8 = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_notuv2/samples_noturban_' + year + '_part8');
  var part9 = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_notuv2/samples_noturban_' + year + '_part9');


  var samples = part0.merge(part1).merge(part2).merge(part3).merge(part4).merge(part5).merge(part6).merge(part7).merge(part8).merge(part9);
  
  samples = samples.map(function(ft){return ft.set("value", 0);});
  
  samples = samples.randomColumn('randomc').sort('randomc');
  
  return samples;
};


var getSamplesUrban = function( year){
  var blocks_list = null;
  
  if(year === 2018){
    blocks_list = getBlocksListUrban2018();
  } else if (year === 2010) {
    blocks_list = getBlocksListUrban2010();
  } else if (year === 2002) {
    blocks_list = getBlocksListUrban2002();
  } else if (year === 1994) {
    blocks_list = getBlocksListUrban1994();
  }
  
  var samples_list = blocks_list.map(function(block_id){
    
    var ftc = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/INFRAURBANA_COL4/samples_urban/samples_urban_' + year + '_blk_' + block_id);

    return ftc;
    
  });
  // print(blocks_list.map(function(block_id){return 1}))
  return ee.FeatureCollection(ee.List(samples_list)).flatten()
  .map(function(ft){return ft.set("value", 1);})
  .randomColumn('randomc').sort('randomc');
};

var getHexagonsBlock = function(block_id){
  
  return ee.FeatureCollection(hexagons.filterMetadata('block_id', 'equals', block_id));
  
};

var getLandsantBlock = function(hexagons_block, landsat){
  
  var imc = hexagons_block.map(function(ft){
    
    return landsat.clip(ft.geometry())
            .set("hex_id", ft.get("hex_id"));
    
  }
  );
  
  return ee.ImageCollection(imc);
};

var landsatAddIndex = function(landsat){
  landsat = landsat.addBands(index_lib.getSMA(landsat));
  landsat = landsat.addBands(index_lib.getNDFI(landsat));
  landsat = landsat.addBands(index_lib.getNDVI(landsat));
  landsat = landsat.addBands(index_lib.getMNDWI(landsat));
  landsat = landsat.addBands(index_lib.getEVI(landsat));
  landsat = landsat.addBands(index_lib.getNDBI(landsat));
  landsat = landsat.addBands(index_lib.getBU(landsat));
  landsat = landsat.addBands(index_lib.getUI(landsat));
 
  return landsat;
  
};

var getListHexId = function(samples){
  
  return samples.distinct('hex_id').toList(samples.size()).map(function(ft){return ee.Feature(ft).get('hex_id')});

};

var classifyBlock = function(landsat_block, samples, bands){

  var classified_block = landsat_block.map(function(image){
    var hex_id = ee.Number(image.get('hex_id'));
    var samples_hex = ee.FeatureCollection(samples.filterMetadata('hex_id', 'equals', hex_id));
    var classified = runRandomForest(20, image, samples_hex, bands);
    return classified.multiply(100).byte();
    
    
  });
  
  return classified_block.mosaic();
  
};

var classifyLandsat = function(landsat, samples, bands){

  var classified = runRandomForest(500, landsat, samples, bands);

  return classified.multiply(100).byte();
  
};


////////////////////////////////////////////////////////////
exports.classifyLandsat = classifyLandsat;
exports.getSamplesUrban = getSamplesUrban;
exports.landsatAddIndex = landsatAddIndex;
exports.classifyBlock = classifyBlock;
exports.landsatAddIndex = landsatAddIndex;
exports.getListHexId = getListHexId;
exports.getLandsantBlock = getLandsantBlock;
exports.getHexagonsBlock = getHexagonsBlock;
exports.getSamplesNotUrban = getSamplesNotUrban;
exports.getSamplesUrbanBlock = getSamplesUrbanBlock;
exports.getFeatureSpace = getFeatureSpace;
exports.runRandomForest = runRandomForest;
exports.getHexagonsBlock = getHexagonsBlock;
exports.getHexagonsFromGrid = getHexagonsFromGrid;
exports.getRandomPointsHexagon = getRandomPointsHexagon;
exports.getBlocksList = getBlocksList;